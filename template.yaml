AWSTemplateFormatVersion: 2010-09-09
Description: >
  Automatically decompress zip files from SRC s3 bucket and sync the unzipped files to DST s3 bucket.
Parameters:
  Prefix:
    Default: 'poc'
    Type: String
    Description: >
      Resource name in this template should be prefixed with this word.
  SrcBucketName:
    Description: >
      S3 bucket holding the zip files that need to be uploaded.
    Type: String
    MinLength: 8
    MaxLength: 32
    AllowedPattern: '^[a-zA-Z][-a-zA-Z0-9]*$'
    Default: poc-zxaws-ab-mirror-us-east-1
  DstBucketName:
    Description: >
      S3 bucket holding the unzipped files that synced by UnzipLambda.
    Type: String
    MinLength: 8
    MaxLength: 32
    AllowedPattern: '^[a-zA-Z][-a-zA-Z0-9]*$'
    Default: poc-zxaws-ab-us-east-1
Resources:
  UnzipLambdaRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Join ['-', [!Ref Prefix, 'UnzipLambda', !Ref 'AWS::Region']]
      Description: >
        'Role for executing unzip lambda function.'
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaRole'
      Policies:
        - PolicyName: 'S3Policies'
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: 'SrcBucketPolicy'
                Effect: Allow
                Action: '*'
                Resource: 
                  - !Join ['/', [!Join [':::', ['arn:aws:s3', !Ref SrcBucketName]], '*']]
              - Sid: 'DstBucketPolicy'
                Effect: Allow
                Action:
                  - 's3:PutObject'
                  - 's3:PutObjectAcl'
                Resource: 
                  - !Join ['/', [!Join [':::', ['arn:aws:s3', !Ref DstBucketName]], '*']]
  UnzipLambda:
    Type: AWS::Lambda::Function
    DependsOn: UnzipLambdaRole
    Properties:
      FunctionName: !Join ['-', [!Ref Prefix, 'unzip-file']]
      Description: >
        'Lambda function for unzipping files.'
      MemorySize: 128
      Handler: unzip-file/index.handler
      Role: !GetAtt UnzipLambdaRole.Arn
      Timeout: 20
      Runtime: nodejs12.x
      ReservedConcurrentExecutions: 10
      Environment:
        Variables:
          S3_BUCKET_DST: !Ref DstBucketName
  UnzipLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      SourceAccount: !Ref AWS::AccountId
      FunctionName: !Ref UnzipLambda
      Principal: s3.amazonaws.com
  # Create s3 bucket in the same AWS Region where you create the AWS CloudFormation stack.
  SrcS3Bucket:
    Type: AWS::S3::Bucket
    DependsOn: UnzipLambda
    Properties:
      BucketName: !Ref SrcBucketName
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      AccelerateConfiguration:
        AccelerationStatus: 'Enabled'
      NotificationConfiguration:
        LambdaConfigurations:
          -
            Function: !GetAtt UnzipLambda.Arn
            Event: "s3:ObjectCreated:*"
  DstS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref DstBucketName
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerPreferred
  DstS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    DependsOn: UnzipLambdaRole
    Properties:
      Bucket: !Ref DstS3Bucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              'AWS':
                - !GetAtt UnzipLambdaRole.Arn
            Action:
              - 's3:PutObject'
              - 's3:PutObjectAcl'
            Resource: 
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref DstBucketName
                  - '/*'
            Condition:
              StringEquals: 
                's3:x-amz-acl':
                  - 'bucket-owner-full-control'
