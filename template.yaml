AWSTemplateFormatVersion: 2010-09-09
Description: >
  Automatically decompress zip file from SRC s3 bucket and sync the unzipped files to DST s3 bucket.
Parameters:
  ResourceNamePrefix:
    Description: >
      Resource name in this template should be prefixed with this.
    Type: String
    MinLength: 8
    MaxLength: 32
    AllowedPattern: '^[a-zA-Z][-a-zA-Z0-9]*$'
    Default: dev
  ResourceNameSuffix:
    Description: >
      Resource name in this template should be suffixed with this.
    Type: String
    MinLength: 8
    MaxLength: 32
    AllowedPattern: '^[a-zA-Z][-a-zA-Z0-9]*$'
    Default: zxaws
  SrcBucketName:
    Description: >
      S3 bucket holding the zip files that need to be uploaded.
    Type: String
    MinLength: 8
    MaxLength: 32
    AllowedPattern: '^[a-zA-Z][-a-zA-Z0-9]*$'
    Default: poc-src-us-east-1
  DstBucketName:
    Description: >
      S3 bucket holding the zip files that need to be uploaded.
    Type: String
    MinLength: 8
    MaxLength: 32
    AllowedPattern: '^[a-zA-Z][-a-zA-Z0-9]*$'
    Default: poc-src-us-east-1
  PatchBucketName:
    Description: >
      S3 bucket name of zxaws AB3 demo zipped patch.
    Type: String
    MinLength: 8
    MaxLength: 32
    AllowedPattern: '^[a-zA-Z][-a-zA-Z0-9]*$'
    Default: zxaws-ab-us-east-1
Resources:
  UnzipPatch:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: !Join ['-', [!Ref ResourceNamePrefix, 'UnzipPatch']]
      Description: ''
      MemorySize: 128
      Handler: unzip-patch/index.handler
      Role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/ZXAWSomeBuilder'
      Timeout: 20
      Runtime: nodejs12.x
      ReservedConcurrentExecutions: 1
      Environment:
        Variables:
          S3_BUCKET_PATCH: !Ref PatchBucketName
  UnzipPatchPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      SourceAccount: !Ref AWS::AccountId
      FunctionName: !Ref UnzipPatch
      Principal: s3.amazonaws.com
  UploadImageBucketDev:
    Type: AWS::S3::Bucket
    DependsOn: CropImage
    Properties:
      BucketName: !Join ['-', [!Ref UploadImageBucketName, 'dev']]
      AccelerateConfiguration:
        AccelerationStatus: 'Enabled'
#        AccelerationStatus: 'Suspended'
      NotificationConfiguration:
        LambdaConfigurations:
          -
            Function: !GetAtt CropImage.Arn
            Event: "s3:ObjectCreated:*"